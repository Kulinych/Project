---
- hosts: host10
  roles:
    - docker_install
  
  tasks:
    - name: Create directory for app
      file:
        path: /ha/
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755

    - name: Create directory for app DB
      file: 
        path: /ha/db
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755

    - name: Create directory for app 
      file: 
        path: /ha/run
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755

    - name: Create config file for 
      copy:
        dest: /ha/configuration.yaml
        content: |
          # Configure a default setup of Home Assistant (frontend, api, etc)
          default_config:

          # Text to speech
          tts:
            - platform: google_translate

          group: !include groups.yaml
          automation: !include automations.yaml
          script: !include scripts.yaml
          scene: !include scenes.yaml

          recorder:
            purge_keep_days: 30
            auto_purge: true
            db_url: !secret db_url

    - name: Create secret file fo connect db
      copy:
        dest: /ha/secrets.yaml    
        content: |
          # Use this file to store secrets like usernames and passwords.
          # Learn more at https://www.home-assistant.io/docs/configuration/secrets/
          some_password: welcome
          db_url: mysql://ha:test@db:3306/hassio?charset=utf8mb4

#    - name: Copy file docker-compose for the run
#      copy:
#        src: /home/jenkins/workspace/{{ jenkins_task_name }}/docker-compose.yaml
#        dest: /ha/app
#        owner: jenkins
#        group: jenkins
#        mode: 0644
       
    - name: Deploy app and db
      shell: docker-compose -f docker-compose.yaml -d
      args:
        chdir: /ha/run

    - name: Curl and check output
      block:
      - name: Curl content
        uri:
          url: "http://localhost:8123"
          return_content: yes
        register: content
        failed_when: "'Home assistant' not in content.content"
    - name: Print content
      debug:
        msg: "{{ content }}"

    - name: Send notification message via Slack when comleted
      community.general.slack:
        token: TFBPBNB2L/B02MGAHSJQP/o67XgrLnSC6f7ij5oIR18V0q
        msg: '{{ inventory_hostname }} completed'
        channel: '#coolnoti'
      delegate_to: localhost
